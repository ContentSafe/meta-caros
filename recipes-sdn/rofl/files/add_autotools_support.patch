commit 0728f9493c1e088735e10f091e89216cbaaa30a4
Author: Andreas Schultz <aschultz@tpip.net>
Date:   Tue Jul 10 14:18:46 2012 +0200

    add autotools support

diff --git a/00README b/00README
deleted file mode 100644
index ca1ba25..0000000
--- a/00README
+++ /dev/null
@@ -1,158 +0,0 @@
-Revised OpenFlow Library (ROFL)
-===============================
-
-About and What is it?
----------------------
-
-As the name suggests, ROFL is an OpenFlow stack (currently version 1.1).
-It's a playground for testing and implementing various things that are 
-not available in the current OpenFlow 1.1 specification, e.g.
-- namespace registration for having multiple controllers controlling parts
-  of the namespace of a data path element. This is similar to functionality
-  as provided by FlowVisor, but was also inspired by the ideas of the 4WARD 
-  project and the generic path discussion therein. 
-- a software architecture suited for using the natural self-similarity of 
-  OpenFlow by stacking multiple OF instances onto each other. ROFL provides
-  an RPC mapper for mapping ROFL's C++ interface to TCP and vice versa so
-  that distributed hierarchies of OF instances may be created. Existing
-  OpenFlow software (NOX, openvswitch) may be used within such a hierarchy.
-  This allows some degree of control regarding the topology that is exposed 
-  to higher layers. An interesting topic for network operators ...
-- a hardware abstraction layer for simplified porting of the stack to various
-  hardware designs. 
-- advanced processing capabilities (but this is not available yet)
-
-Of course a library is of not much use if there is no application that 
-implements higher layer functions as provided by a data path or controller
-entity in OpenFlow. ROFL contains a simple application that is capable
-of instantiating various functions, currently a data path (on a Linux PC in user 
-space) and a simple Ethernet L2 controller (Linux PC). A virtualization engine
-similar to FlowVisor is currently under construction. 
-
-ROFL contains a hardware abstraction layer for the Broadcom Strata SDK 
-and has been tested successfully on a Broadcom BCM 56502 and BCM 56634 device.
-As some NDA restrictions apply here, the Broadcom HAL cannot be provided in source
-code. A binary-only version will be made available soon.
-
-
-PLEASE NOTE! This code is some kind of a technology preview. Having said that, 
-we think that it is still in its alpha stage of development and thus, may crash 
-unexpectedly. However, the data path element has been passing successfully 
-all regressions tests as defined by the OpenFlow default implementation 
-(OFtest yet to come). It is also used as an OF switching device and runs 
-quiet well. However, it's still work in progress!
-
-What is (definitely) missing?
------------------------------
-
-- no STP support
-- no proper detection of port states (available bandwidth)
-- statistics should work, but don't rely on the numbers ;P
-- no queueing support
-- a full documentation explaining all the tiny things worth to be mentioned
-- threading support (if there is some time left, we will do this to improve
-  speed when running on a PC)
-
-How to use it
--------------
-
-The code is C++ and STL based (no TR1). It is running on Ubuntu 11.04 and 
-CentOS 6. Compiling: 
-
-- have a look on the makefile in the source root directory and edit it 
-  according to your needs
-  - defining NDEBUG will improve speed considerably, as it turns off lots 
-    of debugging output (what and when to output is something that needs some
-    attention soon :P)
-
-- run "make rclean && make"
-  - this will compile and build a library in ${ROFL}/lib/common and
-  - a testing application in ${ROFL}/rofld
-  - librt.so is needed on your platform
-
-- change directory to ${ROFL}/rofld. Besides the application "rofld"
-  you find two configuration files
-  - rofl.conf: contains some generic configuration parameters, e.g. 
-    the TCP port for the command line interface
-  - init_state: contains some commands for creating data path elements, 
-    controllers and configure these
-
-- start the application: ./rofld -f rofl.conf -s init_state
-
-- All commands in init_state can also be typed directly into the command
-  line interface. Suppose, the cli port was set to 4888 in rofl.conf, run:
- 
-sh# telnet localhost 4888
-
-  - you get access to the rudimentary CLI. Try the "help" command.
-
-- An example init_state file may look like this:
-
-configure verbosity all=20
-configure verbosity 2=0
-configure verbosity 14=0
-interface eth0 eth 1
-interface tap0 tap 2 00:11:22:33:44:55
-datapath dp0 create linux
-datapath dp0 attach tap0
-datapath dp0 attach eth0
-datapath dp0 connect tcp 127.0.0.1 6633
-
-- A short explanation:
-  - "configure verbosity all=20" sets the debug level of all classes to 20
-  - "configure verbosity 2=0" sets the basic io service debug level to 0 
-    - otherwise your log file is crowded with IO events :)
-  - "configure verbosity 14=0" sets the cofrpc class debug level to 0
-    - check "${ROFL}/include/common/csyslog.h" for the various debug classes
-  - "interface eth0 eth 1" creates a cethport instance for interface "eth0" 
-    and sets port-no as used by OpenFlow to "1"
-  - "interface tap0 tap 2 00:11:22:33:44:55" creates a ctapport instance 
-    for interface "tap0" and sets port-no as used by OpenFlow to "2"
-  - "datapath dp0 create linux" instantiates a cdatapath instance with 
-    name "dp0". A DPID is created automatically from a random number. 
-    "linux" defines the available hardware factories, for now: 
-    - "linux" creates a Linux PC datapath
-    - "broadcom" is used on a Broadcom platform for activating Broadcom support
-  - "datapath dp0 attach tap0" binds "tap0" to "dp0"
-  - "datapath dp0 attach eth0" binds "eth0" to "dp0"
-  - "datapath dp0 connect tcp 127.0.0.1 6633" creates a new csocket instance
-    and connects to a controlling entity at localhost port 6633
-    - Note, SSL is currently not supported.
-
-Questions and Problems
-----------------------
-
-If there are any questions or problems, please send e-mail to one of us:
-- andreas@koepsel.net
-- tobias.jungel@gmail.com
-- ahmad.rostami@tu-berlin.de
-
-We will try to help, but on a best-effort basis and probably, in our spare time. 
-
-License
--------
-
-- Not decided yet.
-- So far: copyright 2011 Andreas Koepsel, Tobias Jungel, Hagen Woesner according
-  to german Urheberrecht.
-
-Running tests
--------------
-
-We added some basic functionality for testing the new OF1.1 code in ROFL.
-After compiling the library, do the following:
-
-- create new virtual Ethernet links on Linux (you need root priviledges for doing so)
-sh# for i in 0 1 2 3 4 5; do /sbin/ip link add type veth; done
-
-- enter the rofld/ directory and start the application with test_basic01
-sh# cd /path/to/rofl/rofld; ./rofld  -f rofl.conf -s test_basic01
-
-- connect to the command line interface
-sh# telnet localhost 4888
-
-- start test basic01
-sh# unittest ut0 start
-
-Check the logfile for the things happening in the background
-sh# tail -f rofld.log
diff --git a/COPYING b/COPYING
new file mode 100644
index 0000000..393613a
--- /dev/null
+++ b/COPYING
@@ -0,0 +1 @@
+all source code is property of EICT GmbH
diff --git a/COPYRIGHT b/COPYRIGHT
deleted file mode 100644
index 393613a..0000000
--- a/COPYRIGHT
+++ /dev/null
@@ -1 +0,0 @@
-all source code is property of EICT GmbH
diff --git a/Makefile.am b/Makefile.am
new file mode 100644
index 0000000..a681804
--- /dev/null
+++ b/Makefile.am
@@ -0,0 +1,20 @@
+#
+#
+#
+ACLOCAL_AMFLAGS = -I m4
+
+EXTRA_DIST = 00README.first 
+SUBDIRS = lib/common lib/rofl socktest adpd/src ethctld/src ipctld/src ipadaptd/src
+
+doc:
+	@doxygen doxyfile.conf
+
+indent:
+	@if [ -z $$(which uncrustify) ]; then \
+		echo "Please install uncrustify (e.g. `apt-get install uncrustify`)"; \
+	else \
+		uncrustify -c unc_indent.cfg --replace include/*.h; \
+		for dir in $(SUBDIRS); do \
+			make -C $$dir $@; \
+		done; \
+	fi
diff --git a/README b/README
new file mode 100644
index 0000000..917c394
--- /dev/null
+++ b/README
@@ -0,0 +1,159 @@
+Revised OpenFlow Library (ROFL)
+===============================
+
+About and What is it?
+---------------------
+
+As the name suggests, ROFL is an OpenFlow stack (currently version 1.1).
+It's a playground for testing and implementing various things that are 
+not available in the current OpenFlow 1.1 specification, e.g.
+- namespace registration for having multiple controllers controlling parts
+  of the namespace of a data path element. This is similar to functionality
+  as provided by FlowVisor, but was also inspired by the ideas of the 4WARD 
+  project and the generic path discussion therein. 
+- a software architecture suited for using the natural self-similarity of 
+  OpenFlow by stacking multiple OF instances onto each other. ROFL provides
+  an RPC mapper for mapping ROFL's C++ interface to TCP and vice versa so
+  that distributed hierarchies of OF instances may be created. Existing
+  OpenFlow software (NOX, openvswitch) may be used within such a hierarchy.
+  This allows some degree of control regarding the topology that is exposed 
+  to higher layers. An interesting topic for network operators ...
+- a hardware abstraction layer for simplified porting of the stack to various
+  hardware designs. 
+- advanced processing capabilities (but this is not available yet)
+
+Of course a library is of not much use if there is no application that 
+implements higher layer functions as provided by a data path or controller
+entity in OpenFlow. ROFL contains a simple application that is capable
+of instantiating various functions, currently a data path (on a Linux PC in user 
+space) and a simple Ethernet L2 controller (Linux PC). A virtualization engine
+similar to FlowVisor is currently under construction. 
+
+ROFL contains a hardware abstraction layer for the Broadcom Strata SDK 
+and has been tested successfully on a Broadcom BCM 56502 and BCM 56634 device.
+As some NDA restrictions apply here, the Broadcom HAL cannot be provided in source
+code. A binary-only version will be made available soon.
+
+
+PLEASE NOTE! This code is some kind of a technology preview. Having said that, 
+we think that it is still in its alpha stage of development and thus, may crash 
+unexpectedly. However, the data path element has been passing successfully 
+all regressions tests as defined by the OpenFlow default implementation 
+(OFtest yet to come). It is also used as an OF switching device and runs 
+quiet well. However, it's still work in progress!
+
+What is (definitely) missing?
+-----------------------------
+
+- no STP support
+- no proper detection of port states (available bandwidth)
+- statistics should work, but don't rely on the numbers ;P
+- no queueing support
+- a full documentation explaining all the tiny things worth to be mentioned
+- threading support (if there is some time left, we will do this to improve
+  speed when running on a PC)
+
+How to use it
+-------------
+
+The code is C++ and STL based (no TR1). It is running on Ubuntu 11.04 and 
+CentOS 6. Compiling: 
+
+- create configure "autoconf -fis"
+
+- run ./configure with options according to your needs
+  - --disable-debug will improve speed considerably, as it turns off lots 
+    of debugging output (what and when to output is something that needs some
+    attention soon :P)
+
+- run "make clean && make"
+  - this will compile and build a library in ${ROFL}/lib/common and
+  - a testing application in ${ROFL}/rofld
+  - librt.so is needed on your platform
+
+- change directory to ${ROFL}/rofld. Besides the application "rofld"
+  you find two configuration files
+  - rofl.conf: contains some generic configuration parameters, e.g. 
+    the TCP port for the command line interface
+  - init_state: contains some commands for creating data path elements, 
+    controllers and configure these
+
+- start the application: ./rofld -f rofl.conf -s init_state
+
+- All commands in init_state can also be typed directly into the command
+  line interface. Suppose, the cli port was set to 4888 in rofl.conf, run:
+ 
+sh# telnet localhost 4888
+
+  - you get access to the rudimentary CLI. Try the "help" command.
+
+- An example init_state file may look like this:
+
+configure verbosity all=20
+configure verbosity 2=0
+configure verbosity 14=0
+interface eth0 eth 1
+interface tap0 tap 2 00:11:22:33:44:55
+datapath dp0 create linux
+datapath dp0 attach tap0
+datapath dp0 attach eth0
+datapath dp0 connect tcp 127.0.0.1 6633
+
+- A short explanation:
+  - "configure verbosity all=20" sets the debug level of all classes to 20
+  - "configure verbosity 2=0" sets the basic io service debug level to 0 
+    - otherwise your log file is crowded with IO events :)
+  - "configure verbosity 14=0" sets the cofrpc class debug level to 0
+    - check "${ROFL}/include/common/csyslog.h" for the various debug classes
+  - "interface eth0 eth 1" creates a cethport instance for interface "eth0" 
+    and sets port-no as used by OpenFlow to "1"
+  - "interface tap0 tap 2 00:11:22:33:44:55" creates a ctapport instance 
+    for interface "tap0" and sets port-no as used by OpenFlow to "2"
+  - "datapath dp0 create linux" instantiates a cdatapath instance with 
+    name "dp0". A DPID is created automatically from a random number. 
+    "linux" defines the available hardware factories, for now: 
+    - "linux" creates a Linux PC datapath
+    - "broadcom" is used on a Broadcom platform for activating Broadcom support
+  - "datapath dp0 attach tap0" binds "tap0" to "dp0"
+  - "datapath dp0 attach eth0" binds "eth0" to "dp0"
+  - "datapath dp0 connect tcp 127.0.0.1 6633" creates a new csocket instance
+    and connects to a controlling entity at localhost port 6633
+    - Note, SSL is currently not supported.
+
+Questions and Problems
+----------------------
+
+If there are any questions or problems, please send e-mail to one of us:
+- andreas@koepsel.net
+- tobias.jungel@gmail.com
+- ahmad.rostami@tu-berlin.de
+
+We will try to help, but on a best-effort basis and probably, in our spare time. 
+
+License
+-------
+
+- Not decided yet.
+- So far: copyright 2011 Andreas Koepsel, Tobias Jungel, Hagen Woesner according
+  to german Urheberrecht.
+
+Running tests
+-------------
+
+We added some basic functionality for testing the new OF1.1 code in ROFL.
+After compiling the library, do the following:
+
+- create new virtual Ethernet links on Linux (you need root priviledges for doing so)
+sh# for i in 0 1 2 3 4 5; do /sbin/ip link add type veth; done
+
+- enter the rofld/ directory and start the application with test_basic01
+sh# cd /path/to/rofl/rofld; ./rofld  -f rofl.conf -s test_basic01
+
+- connect to the command line interface
+sh# telnet localhost 4888
+
+- start test basic01
+sh# unittest ut0 start
+
+Check the logfile for the things happening in the background
+sh# tail -f rofld.log
diff --git a/adpd/makefile b/adpd/makefile
deleted file mode 100644
index 6a92013..0000000
--- a/adpd/makefile
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-#
-#
-
-BASEDIR := ..
-SUBDIRS := src
-
-all: $(SUBDIRS)
- 
-.PHONY: $(SUBDIRS)
-
-$(SUBDIRS):
-			$(MAKE) -C $@
-
-.PHONY : clean rclean
-clean :
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir clean; \
-	done;
-
-rclean : clean
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir rclean; \
-	done;
-
-include $(BASEDIR)/static.mk
diff --git a/adpd/src/Makefile.am b/adpd/src/Makefile.am
new file mode 100644
index 0000000..fa94732
--- /dev/null
+++ b/adpd/src/Makefile.am
@@ -0,0 +1,14 @@
+#
+#
+#
+#
+
+sbin_PROGRAMS = adpd
+adpd_SOURCES = adpd.cc cdpath.cc cfwdengine.cc cpkbqueue.cc cpkbstore.cc
+adpd_CXXFLAGS = $(ORAN_FLAGS) \
+		-I$(srcdir)/include \
+		-I$(top_srcdir)/include \
+		-I$(top_srcdir)/include/common \
+		-I$(top_srcdir)/include/datapath \
+		-I$(top_srcdir)/include/control
+adpd_LDADD = $(top_builddir)/lib/rofl/librofl.la $(top_builddir)/lib/common/librofcommon.la
diff --git a/adpd/src/makefile b/adpd/src/makefile
deleted file mode 100644
index f5ff52d..0000000
--- a/adpd/src/makefile
+++ /dev/null
@@ -1,60 +0,0 @@
-#
-#
-#
-#
-
-TARGET := adpd
-
-BASEDIR := ../..
-
-include $(BASEDIR)/makefile.inc
-
-INCDIR := -Iinclude -I$(BASEDIR)/include -I$(BASEDIR)/include/common -I$(BASEDIR)/include/datapath -I$(BASEDIR)/include/control -Iinclude $(BOOST_INCDIR)
-OBJDIR := ./build
-
-INCS := $(wildcard include/*.h)
-SRCS := $(wildcard *.cc)
-OBJS := $(patsubst %.cc,$(OBJDIR)/%.o,$(SRCS))
-
-BUILD_TARGETS := $(LIBCTRL)
-
-CFLAGS+=$(INCDIR)
-#LIBS := -L$(BASEDIR)/lib/common -lrofcommon -L$(BASEDIR)/lib/rofl -lrofl -lpthread
-#LIBS := $(BASEDIR)/lib/common/librofcommon.a $(BASEDIR)/lib/rofl/librofl.a -lpthread
-LIBS := $(BASEDIR)/lib/rofl/librofl.a $(BASEDIR)/lib/common/librofcommon.a -lpthread
-LIBS += -lrt
-LDFLAGS := -pg
-
-.PHONY: all
-
-all: $(OBJDIR) $(TARGET)
-
-$(TARGET): $(OBJS) 
-	$(CC) $(LDFLAGS) $(OBJS) $(LIBS) -o $@
-
-.depend: $(SRCS)
-	$(CC) -MM $(SRCS) $(INCS) $(INCDIR) > .depend        
-
-$(OBJDIR)/%.o : %.cc
-	$(CC) $(CFLAGS) -c $< -o $@
-
-$(OBJDIR):
-	mkdir $(OBJDIR)
-
-$(SUBDIRS):
-	$(MAKE) -C $@
-
-
-.PHONY : clean rclean subdirs
-clean :
-	@for dir in $(SUBDIRS); do \
-                make -C $$dir $@; \
-        done;
-	rm -f $(OBJDIR)/*.o
-
-rclean : clean
-	rm -f .depend $(TARGET) $(OBJDIR)/*.o
-	rm -f *~
-			
-include $(BASEDIR)/static.mk
-include .depend
diff --git a/configure.ac b/configure.ac
new file mode 100644
index 0000000..55f7ffb
--- /dev/null
+++ b/configure.ac
@@ -0,0 +1,70 @@
+#                                               -*- Autoconf -*-
+# Process this file with autoconf to produce a configure script.
+
+AC_PREREQ([2.68])
+AC_INIT([rofl],[0.1],[bugs@rofl.com])
+AC_CONFIG_SRCDIR([ipadaptd/src/cipoe.cc])
+AC_CONFIG_AUX_DIR(auxdir)
+AM_INIT_AUTOMAKE([foreign silent-rules subdir-objects -Wcross])
+AC_CONFIG_HEADERS([config.h])
+AC_CONFIG_MACRO_DIR([m4])
+
+dnl This mechanism allows one to enable debug compilations...
+AC_MSG_CHECKING([if debugging is wanted])
+AC_ARG_ENABLE([debug],
+  [AS_HELP_STRING([--disable-debug],
+                  [disable debugging])],
+  [], [ enable_debug = "yes" ])
+if test "$enable_debug" = "yes"; then
+   AC_MSG_RESULT(yes)
+   CXXFLAGS="$CXXFLAGS -DDEBUG"
+else
+   AC_MSG_RESULT(no)
+   CXXFLAGS="$CXXFLAGS -DNDEBUG"
+fi
+AM_CONDITIONAL(ENABLE_DEBUG, test "$enable_debug" = "yes")
+
+ORAN_FLAGS=-DORAN
+AC_SUBST([ORAN_FLAGS])
+
+# Checks for programs.
+AC_PROG_CXX
+AC_PROG_CC
+AM_PROG_CC_C_O
+AC_PROG_INSTALL
+AC_PROG_MAKE_SET
+LT_INIT
+
+AC_CHECK_LIB([pthread], [pthread_mutex_init])
+AC_CHECK_LIB([rt], [clock_gettime])
+
+# Checks for header files.
+AC_CHECK_HEADERS([arpa/inet.h fcntl.h inttypes.h limits.h netinet/in.h stdint.h stdlib.h string.h strings.h sys/ioctl.h sys/socket.h sys/time.h syslog.h unistd.h])
+
+# Checks for typedefs, structures, and compiler characteristics.
+AC_HEADER_STDBOOL
+AC_C_INLINE
+AC_TYPE_PID_T
+AC_TYPE_SIZE_T
+AC_TYPE_UINT16_T
+AC_TYPE_UINT32_T
+AC_TYPE_UINT64_T
+AC_TYPE_UINT8_T
+
+# Checks for library functions.
+AC_FUNC_FORK
+AC_FUNC_MMAP
+AC_FUNC_REALLOC
+AC_CHECK_FUNCS([bzero clock_gettime dup2 getpagesize memmove memset munmap select socket strerror strncasecmp])
+
+AC_CONFIG_FILES([
+  Makefile
+  lib/common/Makefile
+  lib/rofl/Makefile
+  adpd/src/Makefile
+  ethctld/src/Makefile
+  ipadaptd/src/Makefile
+  ipctld/src/Makefile
+  modules/Makefile
+  socktest/Makefile])
+AC_OUTPUT
diff --git a/ethctld/makefile b/ethctld/makefile
deleted file mode 100644
index 6a92013..0000000
--- a/ethctld/makefile
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-#
-#
-
-BASEDIR := ..
-SUBDIRS := src
-
-all: $(SUBDIRS)
- 
-.PHONY: $(SUBDIRS)
-
-$(SUBDIRS):
-			$(MAKE) -C $@
-
-.PHONY : clean rclean
-clean :
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir clean; \
-	done;
-
-rclean : clean
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir rclean; \
-	done;
-
-include $(BASEDIR)/static.mk
diff --git a/ethctld/src/Makefile.am b/ethctld/src/Makefile.am
new file mode 100644
index 0000000..b223986
--- /dev/null
+++ b/ethctld/src/Makefile.am
@@ -0,0 +1,14 @@
+#
+#
+#
+#
+
+sbin_PROGRAMS = ethctld
+ethctld_SOURCES = cethctl.cc ethctld.cc
+ethctld_CXXFLAGS = $(ORAN_FLAGS) \
+		   -I$(srcdir)/include \
+		   -I$(top_srcdir)/include \
+		   -I$(top_srcdir)/include/common \
+		   -I$(top_srcdir)/include/datapath \
+		   -I$(top_srcdir)/include/control
+ethctld_LDADD = $(top_builddir)/lib/rofl/librofl.la $(top_builddir)/lib/common/librofcommon.la
diff --git a/ethctld/src/makefile b/ethctld/src/makefile
deleted file mode 100644
index aeabf24..0000000
--- a/ethctld/src/makefile
+++ /dev/null
@@ -1,60 +0,0 @@
-#
-#
-#
-#
-
-TARGET := ethctld
-
-BASEDIR := ../..
-
-include $(BASEDIR)/makefile.inc
-
-INCDIR := -I$(BASEDIR)/include -I$(BASEDIR)/include/common -I$(BASEDIR)/include/datapath -I$(BASEDIR)/include/control -Iinclude $(BOOST_INCDIR)
-OBJDIR := ./build
-
-INCS := $(wildcard include/*.h)
-SRCS := $(wildcard *.cc)
-OBJS := $(patsubst %.cc,$(OBJDIR)/%.o,$(SRCS))
-
-BUILD_TARGETS := $(LIBCTRL)
-
-CFLAGS+=$(INCDIR)
-#LIBS := -L$(BASEDIR)/lib/common -lrofcommon -L$(BASEDIR)/lib/rofl -lrofl -lpthread
-#LIBS := $(BASEDIR)/lib/common/librofcommon.a $(BASEDIR)/lib/rofl/librofl.a -lpthread
-LIBS := $(BASEDIR)/lib/rofl/librofl.a $(BASEDIR)/lib/common/librofcommon.a -lpthread
-LIBS += -lrt
-LDFLAGS := -pg
-
-.PHONY: all
-
-all: $(OBJDIR) $(TARGET)
-
-$(TARGET): $(OBJS) 
-	$(CC) $(LDFLAGS) $(OBJS) $(LIBS) -o $@
-
-.depend: $(SRCS)
-	$(CC) -MM $(SRCS) $(INCS) $(INCDIR) > .depend        
-
-$(OBJDIR)/%.o : %.cc
-	$(CC) $(CFLAGS) -c $< -o $@
-
-$(OBJDIR):
-	mkdir $(OBJDIR)
-
-$(SUBDIRS):
-	$(MAKE) -C $@
-
-
-.PHONY : clean rclean subdirs
-clean :
-	@for dir in $(SUBDIRS); do \
-                make -C $$dir $@; \
-        done;
-	rm -f $(OBJDIR)/*.o
-
-rclean : clean
-	rm -f .depend $(TARGET) $(OBJDIR)/*.o
-	rm -f *~
-			
-include $(BASEDIR)/static.mk
-include .depend
diff --git a/ipadaptd/makefile b/ipadaptd/makefile
deleted file mode 100644
index 6a92013..0000000
--- a/ipadaptd/makefile
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-#
-#
-
-BASEDIR := ..
-SUBDIRS := src
-
-all: $(SUBDIRS)
- 
-.PHONY: $(SUBDIRS)
-
-$(SUBDIRS):
-			$(MAKE) -C $@
-
-.PHONY : clean rclean
-clean :
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir clean; \
-	done;
-
-rclean : clean
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir rclean; \
-	done;
-
-include $(BASEDIR)/static.mk
diff --git a/ipadaptd/src/Makefile.am b/ipadaptd/src/Makefile.am
new file mode 100644
index 0000000..16d25e7
--- /dev/null
+++ b/ipadaptd/src/Makefile.am
@@ -0,0 +1,14 @@
+#
+#
+#
+#
+
+sbin_PROGRAMS = ipadaptd
+ipadaptd_SOURCES = cipoe.cc cpppoe.cc cpppsession.cc ipadaptd.cc
+ipadaptd_CXXFLAGS = $(ORAN_FLAGS) \
+		    -I$(srcdir)/include \
+		    -I$(top_srcdir)/include \
+		    -I$(top_srcdir)/include/common \
+		    -I$(top_srcdir)/include/datapath \
+		    -I$(top_srcdir)/include/control
+ipadaptd_LDADD = $(top_builddir)/lib/rofl/librofl.la $(top_builddir)/lib/common/librofcommon.la
diff --git a/ipadaptd/src/makefile b/ipadaptd/src/makefile
deleted file mode 100644
index 8ca7dc4..0000000
--- a/ipadaptd/src/makefile
+++ /dev/null
@@ -1,60 +0,0 @@
-#
-#
-#
-#
-
-TARGET := ipadaptd
-
-BASEDIR := ../..
-
-include $(BASEDIR)/makefile.inc
-
-INCDIR := -I$(BASEDIR)/include -I$(BASEDIR)/include/common -I$(BASEDIR)/include/datapath -I$(BASEDIR)/include/control -Iinclude $(BOOST_INCDIR)
-OBJDIR := ./build
-
-INCS := $(wildcard include/*.h)
-SRCS := $(wildcard *.cc)
-OBJS := $(patsubst %.cc,$(OBJDIR)/%.o,$(SRCS))
-
-BUILD_TARGETS := $(LIBCTRL)
-
-CFLAGS+=$(INCDIR)
-#LIBS := -L$(BASEDIR)/lib/common -lrofcommon -L$(BASEDIR)/lib/rofl -lrofl -lpthread
-#LIBS := $(BASEDIR)/lib/common/librofcommon.a $(BASEDIR)/lib/rofl/librofl.a -lpthread
-LIBS := $(BASEDIR)/lib/rofl/librofl.a $(BASEDIR)/lib/common/librofcommon.a -lpthread
-LIBS += -lrt
-LDFLAGS := -pg
-
-.PHONY: all
-
-all: $(OBJDIR) $(TARGET)
-
-$(TARGET): $(OBJS) 
-	$(CC) $(LDFLAGS) $(OBJS) $(LIBS) -o $@
-
-.depend: $(SRCS)
-	$(CC) -MM $(SRCS) $(INCS) $(INCDIR) > .depend        
-
-$(OBJDIR)/%.o : %.cc
-	$(CC) $(CFLAGS) -c $< -o $@
-
-$(OBJDIR):
-	mkdir $(OBJDIR)
-
-$(SUBDIRS):
-	$(MAKE) -C $@
-
-
-.PHONY : clean rclean subdirs
-clean :
-	@for dir in $(SUBDIRS); do \
-                make -C $$dir $@; \
-        done;
-	rm -f $(OBJDIR)/*.o
-
-rclean : clean
-	rm -f .depend $(TARGET) $(OBJDIR)/*.o
-	rm -f *~
-			
-include $(BASEDIR)/static.mk
-include .depend
diff --git a/ipctld/makefile b/ipctld/makefile
deleted file mode 100644
index 6a92013..0000000
--- a/ipctld/makefile
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-#
-#
-
-BASEDIR := ..
-SUBDIRS := src
-
-all: $(SUBDIRS)
- 
-.PHONY: $(SUBDIRS)
-
-$(SUBDIRS):
-			$(MAKE) -C $@
-
-.PHONY : clean rclean
-clean :
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir clean; \
-	done;
-
-rclean : clean
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir rclean; \
-	done;
-
-include $(BASEDIR)/static.mk
diff --git a/ipctld/src/Makefile.am b/ipctld/src/Makefile.am
new file mode 100644
index 0000000..f6ebef3
--- /dev/null
+++ b/ipctld/src/Makefile.am
@@ -0,0 +1,14 @@
+#
+#
+#
+#
+
+sbin_PROGRAMS = ipctld
+ipctld_SOURCES = cipconfig.cc cipctl.cc cipfib.cc ciprib.cc ipctld.cc
+ipctld_CXXFLAGS = $(ORAN_FLAGS) \
+		  -I$(srcdir)/include \
+		  -I$(top_srcdir)/include \
+		  -I$(top_srcdir)/include/common \
+		  -I$(top_srcdir)/include/datapath \
+		  -I$(top_srcdir)/include/control
+ipctld_LDADD = $(top_builddir)/lib/rofl/librofl.la $(top_builddir)/lib/common/librofcommon.la
diff --git a/ipctld/src/makefile b/ipctld/src/makefile
deleted file mode 100644
index c590322..0000000
--- a/ipctld/src/makefile
+++ /dev/null
@@ -1,60 +0,0 @@
-#
-#
-#
-#
-
-TARGET := ipctld
-
-BASEDIR := ../..
-
-include $(BASEDIR)/makefile.inc
-
-INCDIR := -I$(BASEDIR)/include -I$(BASEDIR)/include/common -I$(BASEDIR)/include/datapath -I$(BASEDIR)/include/control -Iinclude $(BOOST_INCDIR)
-OBJDIR := ./build
-
-INCS := $(wildcard include/*.h)
-SRCS := $(wildcard *.cc)
-OBJS := $(patsubst %.cc,$(OBJDIR)/%.o,$(SRCS))
-
-BUILD_TARGETS := $(LIBCTRL)
-
-CFLAGS+=$(INCDIR)
-#LIBS := -L$(BASEDIR)/lib/common -lrofcommon -L$(BASEDIR)/lib/rofl -lrofl -lpthread
-#LIBS := $(BASEDIR)/lib/common/librofcommon.a $(BASEDIR)/lib/rofl/librofl.a -lpthread
-LIBS := $(BASEDIR)/lib/rofl/librofl.a $(BASEDIR)/lib/common/librofcommon.a -lpthread
-LIBS += -lrt
-LDFLAGS := -pg
-
-.PHONY: all
-
-all: $(OBJDIR) $(TARGET)
-
-$(TARGET): $(OBJS) 
-	$(CC) $(LDFLAGS) $(OBJS) $(LIBS) -o $@
-
-.depend: $(SRCS)
-	$(CC) -MM $(SRCS) $(INCS) $(INCDIR) > .depend        
-
-$(OBJDIR)/%.o : %.cc
-	$(CC) $(CFLAGS) -c $< -o $@
-
-$(OBJDIR):
-	mkdir $(OBJDIR)
-
-$(SUBDIRS):
-	$(MAKE) -C $@
-
-
-.PHONY : clean rclean subdirs
-clean :
-	@for dir in $(SUBDIRS); do \
-                make -C $$dir $@; \
-        done;
-	rm -f $(OBJDIR)/*.o
-
-rclean : clean
-	rm -f .depend $(TARGET) $(OBJDIR)/*.o
-	rm -f *~
-			
-include $(BASEDIR)/static.mk
-include .depend
diff --git a/lib/common/Makefile.am b/lib/common/Makefile.am
new file mode 100644
index 0000000..c8596cb
--- /dev/null
+++ b/lib/common/Makefile.am
@@ -0,0 +1,27 @@
+#
+#
+#
+
+noinst_LTLIBRARIES = librofcommon-noerror.la
+librofcommon_noerror_la_SOURCES = cgraph.cc cofmatch.cc
+librofcommon_noerror_la_CXXFLAGS = $(ORAN_FLAGS) -Wno-error -I$(top_srcdir)/include
+
+lib_LTLIBRARIES = librofcommon.la
+librofcommon_la_SOURCES = \
+	caddress.cc cctlelem.cc cerror.cc cfibentry.cc cflowentry.cc \
+	cforward.cc cfsm.cc cfspentry.cc cfsptable.cc cftentry.cc \
+	cfttable.cc cfwdelem.cc cfwdentry.cc cfwdtable.cc \
+	cgroupentry.cc cgtentry.cc cgttable.cc ciosrv.cc clldplist.cc \
+	clldptlv.cc cmacaddr.cc cmemory.cc cmempool.cc cofaclist.cc \
+	cofaction.cc cofactionset.cc cofbase.cc cofbclist.cc cofbucket.cc \
+	cofctrl.cc cofdpath.cc cofinlist.cc cofinst.cc coflist.cc \
+	cofpacket.cc cofport.cc cofportlist.cc cofrpc.cc \
+	cpacket.cc cpipe.cc cport.cc cpppoelist.cc cpppoetlv.cc crandom.cc \
+	croflexp.cc csocket.cc csyslog.cc cutbase.cc \
+	farpv4frame.cc	fdataframe.cc fetherframe.cc fframe.cc \
+	ficmpv4frame.cc fipv4frame.cc flldpframe.cc fmplsframe.cc \
+	fofframe.cc fpppframe.cc fpppoeframe.cc ftcpframe.cc \
+	fudpframe.cc fvlanframe.cc
+librofcommon_la_LIBADD = librofcommon-noerror.la
+librofcommon_la_LDFLAGS = -version-info 0:1:0
+librofcommon_la_CXXFLAGS = $(ORAN_FLAGS) -I$(top_srcdir)/include
\ No newline at end of file
diff --git a/lib/common/makefile b/lib/common/makefile
deleted file mode 100644
index 27ba9a1..0000000
--- a/lib/common/makefile
+++ /dev/null
@@ -1,64 +0,0 @@
-#
-#
-#
-BASEDIR := ../..
-
-include $(BASEDIR)/makefile.inc
-
-#TARGET := librofl.so.0.1.0
-TARGET := librofcommon.a
-STATIC_TARGET := librofcommon.a
-INCDIR := -I $(BASEDIR)/include
-OBJDIR := build
-INCS := $(wildcard *.h)
-SRCS := $(wildcard *.cc)
-OBJS := $(patsubst %.cc,$(OBJDIR)/%.o,$(SRCS))
-
-LIBS := -L $(BASEDIR)/lib
-
-CFLAGS+= $(INCDIR)
-
-all: $(TARGET) 
-#all: $(TARGET) subdirs
-
-subdirs: $(SUBDIRS)
-			$(MAKE) -C $?
-
-
-.depend: $(SRCS)
-			$(CC) -MM $(SRCS) $(INCS) $(INCDIR) > .depend
-
-
-$(OBJDIR)/cgraph.o : cgraph.cc
-	$(CC) $(CFLAGS) -Wno-error -c $< -o $@
-
-$(OBJDIR)/cofmatch.o : cofmatch.cc
-	$(CC) $(CFLAGS) -Wno-error -c $< -o $@
-
-$(OBJDIR)/%.o : %.cc
-			$(CC) $(CFLAGS) -c $< -o $@
-     
-
-$(TARGET): $(OBJS) .depend
-			$(CROSS_COMPILE)ar rcs $(STATIC_TARGET) $(OBJS)
-			#$(CC) -shared -Wl,-soname,librofl.so.0 -o librofl.so.0.1.0 $(OBJS) ${LIBS}
-			#ln -sf librofl.so.0.1.0 librofl.so.0.1
-			#ln -sf librofl.so.0.1 librofl.so.0
-			#ln -sf librofl.so.0 librofl.so
-
-$(OBJS): | $(OBJDIR)
-    
-$(OBJDIR):
-		mkdir $(OBJDIR)
-
-.PHONY : clean rclean
-clean :
-			rm -f $(STATIC_TARGET)
-			rm -f $(OBJS)
-
-rclean : clean
-			rm -f .depend $(TARGET)
-			rm -f *~
-
-include $(BASEDIR)/static.mk
-include .depend
diff --git a/lib/makefile b/lib/makefile
deleted file mode 100644
index 91fc487..0000000
--- a/lib/makefile
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-#
-#
-
-BASEDIR := ..
-SUBDIRS := common rofl
-
-all: $(SUBDIRS)
- 
-.PHONY: $(SUBDIRS)
-
-$(SUBDIRS):
-			$(MAKE) -C $@
-
-.PHONY : clean rclean
-clean :
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir clean; \
-	done;
-
-rclean : clean
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir rclean; \
-	done;
-
-include $(BASEDIR)/static.mk
diff --git a/lib/rofl/Makefile.am b/lib/rofl/Makefile.am
new file mode 100644
index 0000000..1d6b9ac
--- /dev/null
+++ b/lib/rofl/Makefile.am
@@ -0,0 +1,9 @@
+#
+#
+#
+lib_LTLIBRARIES = librofl.la
+librofl_la_SOURCES = \
+	cethport.cc clinuxport.cc cmmapport.cc cnetmapport.cc cofipv4port.cc \
+	cpkbuf.cc crib.cc ctapport.cc cunixenv.cc cunixport.cc
+librofl_la_LDFLAGS = -version-info 0:1:0
+librofl_la_CXXFLAGS = $(ORAN_FLAGS) -I$(top_srcdir)/include
\ No newline at end of file
diff --git a/lib/rofl/makefile b/lib/rofl/makefile
deleted file mode 100644
index c0cd935..0000000
--- a/lib/rofl/makefile
+++ /dev/null
@@ -1,57 +0,0 @@
-#
-#
-#
-BASEDIR := ../..
-
-include $(BASEDIR)/makefile.inc
-
-#TARGET := librofl.so.0.1.0
-TARGET := librofl.a
-STATIC_TARGET := librofl.a
-INCDIR := -I $(BASEDIR)/include
-OBJDIR := build
-INCS := $(wildcard *.h)
-SRCS := $(wildcard *.cc)
-OBJS := $(patsubst %.cc,$(OBJDIR)/%.o,$(SRCS))
-
-LIBS := -L $(BASEDIR)/lib
-
-CFLAGS+= $(INCDIR)
-
-all: $(TARGET) 
-#all: $(TARGET) subdirs
-
-subdirs: $(SUBDIRS)
-			$(MAKE) -C $?
-
-
-.depend: $(SRCS)
-			$(CC) -MM $(SRCS) $(INCS) $(INCDIR) > .depend
-     
-$(OBJDIR)/%.o : %.cc
-			$(CC) $(CFLAGS) -c $< -o $@
-     
-
-$(TARGET): $(OBJS) .depend
-			$(CROSS_COMPILE)ar rcs $(STATIC_TARGET) $(OBJS)
-			#$(CC) -shared -Wl,-soname,librofl.so.0 -o librofl.so.0.1.0 $(OBJS) ${LIBS}
-			#ln -sf librofl.so.0.1.0 librofl.so.0.1
-			#ln -sf librofl.so.0.1 librofl.so.0
-			#ln -sf librofl.so.0 librofl.so
-
-$(OBJS): | $(OBJDIR)
-    
-$(OBJDIR):
-		mkdir $(OBJDIR)
-
-.PHONY : clean rclean
-clean :
-			rm -f $(STATIC_TARGET)
-			rm -f $(OBJS)
-
-rclean : clean
-			rm -f .depend $(TARGET)
-			rm -f *~
-
-include $(BASEDIR)/static.mk
-include .depend
diff --git a/makefile b/makefile
deleted file mode 100644
index 858256f..0000000
--- a/makefile
+++ /dev/null
@@ -1,58 +0,0 @@
-#
-#
-#
-
-include makefile.inc
-
-SHELL = /bin/bash
-
-ifneq ($(CROSS_COMPILE),)
-SUBDIRS = lib 
-else
-SUBDIRS = lib socktest adpd ethctld ipctld ipadaptd
-endif
-
-# update SUBDIRS for octeon
-ifneq (,$(findstring octeon,$(CROSS_COMPILE)))
-SUBDIRS += adpd
-endif
-
-.PHONY: rclean clean $(SUBDIRS)
-
-all: $(SUBDIRS)
-
-$(SUBDIRS):
-	$(MAKE) -C $@
-
-clean:
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir $@; \
-	done; 
-
-rclean: clean
-	@for dir in $(SUBDIRS); do \
-		make -C $$dir $@; \
-	done;
-	rm -rf ./include/*~
-	rm -rf ./doc Doxyfile doxygen.file
-	rm -f *~
-
-distclean: rclean
-
-doc:
-#	@echo -e "OUTPUT_DIRECTORY = ./doc\n \
-#			INPUT = $(SUBDIRS) lib/common lib/datapath  \
-#			INCLUDE_PATH = include include/common include/datapath" | doxygen -u - > Doxyfile
-#	@doxygen &>/dev/null
-	@doxygen doxyfile.conf
-
-indent:
-	@if [ -z $$(which uncrustify) ]; then \
-		echo "Please install uncrustify (e.g. `apt-get install uncrustify`)"; \
-	else \
-		uncrustify -c unc_indent.cfg --replace include/*.h; \
-		for dir in $(SUBDIRS); do \
-			make -C $$dir $@; \
-		done; \
-	fi
-
diff --git a/makefile.inc b/makefile.inc
deleted file mode 100644
index 2f5d8ec..0000000
--- a/makefile.inc
+++ /dev/null
@@ -1,39 +0,0 @@
-CC=${CROSS_COMPILE}g++
-
-CFLAGS=-Wall -Werror -pthread
-
-# enable debugging by default
-DEBUG ?= 1
-ifeq ($(DEBUG),1)
-CFLAGS += -g -DDEBUG
-else
-CFLAGS += -DNDEBUG -g -O2
-endif
-
-
-
-# profiling
-CFLAGS += -pg
-
-# enable memory pool
-# CFLAGS += -DMEMPOOL
-
-# enable ProAct specific extensions for PPPoE/PPP
-CFLAGS += -DORAN
-
-
-# netmap support and includes
-# CFLAGS += -DNETMAP -I${HOME}/src/netmap-linux/include
-
-
-# enable performance testing for L2 forwarding
-# CFLAGS += -DSWITCHINGTEST
-
-
-ifneq ($(CROSS_COMPILE),)
-CFLAGS += -DHARDWARE -fPIC
-BOOST_INCDIR ?= -I$(BASEDIR)/../boost-headers
-endif
-
-# uncomment to build for AM4010
-# CFLAGS += -static -m32
diff --git a/modules/Makefile.am b/modules/Makefile.am
new file mode 100644
index 0000000..6cf6e14
--- /dev/null
+++ b/modules/Makefile.am
@@ -0,0 +1,17 @@
+#
+#
+#
+
+pkglib_LTLIBRARIES = libtestmod.la libvlanmod.la libmacHdrSwapmod.la
+
+libtestmod_la_SOURCES = ctestmod.c
+libtestmod_la_LDFLAGS = -module -version-info 1:0
+libtestmod_la_CFLAGS = $(ORAN_FLAGS)
+
+libvlanmod_la_SOURCES = cvlanmod.c
+libvlanmod_la_LDFLAGS = -module -version-info 1:0
+libvlanmod_la_CFLAGS = $(ORAN_FLAGS)
+
+libmacHdrSwapmod_la_SOURCES = cmacHdrSwapmod.c
+libmacHdrSwapmod_la_LDFLAGS = -module -version-info 1:0
+libmacHdrSwapmod_la_CFLAGS = $(ORAN_FLAGS)
\ No newline at end of file
diff --git a/modules/makefile b/modules/makefile
deleted file mode 100644
index fb97663..0000000
--- a/modules/makefile
+++ /dev/null
@@ -1,57 +0,0 @@
-#
-#
-#
-
-TESTMOD := libtestmod.so.1.0
-TESTOBJS := ctestmod.o
-VLANMOD := libvlanmod.so.1.0
-VLANOBJS := cvlanmod.o
-MHSMOD := libmacHdrSwapmod.so.1.0
-MHSOBJS := cmacHdrSwapmod.o
-BASEDIR := ..
-INCDIR := .
-OBJDIR := .
-SRCDIR := src
-INCS := $(wildcard *.h)
-SRCS := $(wildcard *.c)
-OBJS := $(patsubst %.c,%.o,$(SRCS))
-TESTLIBS := -shared -Wl,-soname,$(TESTMOD)
-VLANLIBS := -shared -Wl,-soname,$(VLANMOD)
-MHSLIBS := -shared -Wl,-soname,$(MHSMOD)
-
-CC      = $(CROSS_COMPILE)g++
-CFLAGS  = -Wall -g -I$(INCDIR) -fPIC
-
-all: $(TESTMOD) $(VLANMOD) $(MHSMOD)
-
-$(TESTMOD): $(TESTOBJS) .depend
-			$(CC) -Wall -o $@ $(TESTOBJS) ${TESTLIBS}
-
-$(VLANMOD): $(VLANOBJS) .depend
-			$(CC) -Wall -o $@ $(VLANOBJS) ${VLANLIBS}
-
-$(MHSMOD): $(MHSOBJS) .depend
-			$(CC) -Wall -o $@ $(MHSOBJS) ${MHSLIBS}
-
-.depend: $(SRCS)
-			$(CC) -MM $(SRCS) $(INCS) > .depend
-     
-$(OBJDIR)/%.o : %.cc
-			$(CC) $(CFLAGS) -c $< -o $@
-     
-
-$(OBJS): | $(OBJDIR)
-    
-$(OBJDIR):
-		mkdir $(OBJDIR)
-
-.PHONY : clean rclean
-clean :
-			rm -f $(OBJS)
-
-rclean : clean
-			rm -f .depend
-			rm -f *~
-
-include $(BASEDIR)/static.mk
-include .depend
diff --git a/socktest/Makefile.am b/socktest/Makefile.am
new file mode 100644
index 0000000..79165a5
--- /dev/null
+++ b/socktest/Makefile.am
@@ -0,0 +1,13 @@
+#
+#
+#
+
+sbin_PROGRAMS = socktest
+socktest_SOURCES = chub.cc csocktest.cc socktest.cc
+socktest_CXXFLAGS = $(ORAN_FLAGS) \
+		    -I$(srcdir)/include \
+		    -I$(top_srcdir)/include \
+		    -I$(top_srcdir)/include/common \
+		    -I$(top_srcdir)/include/datapath \
+		    -I$(top_srcdir)/include/control
+socktest_LDADD = $(top_builddir)/lib/rofl/librofl.la $(top_builddir)/lib/common/librofcommon.la
diff --git a/socktest/makefile b/socktest/makefile
deleted file mode 100644
index 6c97ba6..0000000
--- a/socktest/makefile
+++ /dev/null
@@ -1,46 +0,0 @@
-#
-#
-#
-
-TARGET := socktest
-BASEDIR := ..
-INCDIR := -I $(BASEDIR)/include -I.
-OBJDIR := .
-SRCDIR := src
-INCS := $(wildcard *.h)
-SRCS := $(wildcard *.cc)
-OBJS := $(patsubst %.cc,%.o,$(SRCS))
-# LIBS := -lstdc++ -ldl -L ../lib/datapath -lrofl -L ../lib/common -l rofcommon
-LIBS := -lstdc++ -ldl -lpthread ../lib/rofl/librofl.a ../lib/common/librofcommon.a 
-#LIBS := -lstdc++ -ldl ../lib/common/librofcommon.a ../lib/rofl/librofl.a 
-
-CC      = $(CROSS_COMPILE)g++
-CFLAGS  = -Wall -g -pg $(INCDIR) -fPIC -DORAN
-
-all: $(TARGET)
-
-.depend: $(SRCS)
-			$(CC) -MM $(SRCS) $(INCS) $(INCDIR) > .depend
-     
-$(OBJDIR)/%.o : %.cc
-			$(CC) $(CFLAGS) -c $< -o $@
-     
-
-$(TARGET): $(OBJS) .depend
-			$(CC) $(CFLAGS) -o $@ $(OBJS) ${LIBS}
-
-$(OBJS): | $(OBJDIR)
-    
-$(OBJDIR):
-		mkdir $(OBJDIR)
-
-.PHONY : clean rclean
-clean :
-			rm -f $(OBJS)
-
-rclean : clean
-			rm -f .depend $(TARGET)
-			rm -f *~
-			
-include $(BASEDIR)/static.mk
-include .depend
diff --git a/static.mk b/static.mk
deleted file mode 100644
index 22467f5..0000000
--- a/static.mk
+++ /dev/null
@@ -1,4 +0,0 @@
-
-indent:
-	uncrustify -c $(BASEDIR)/unc_indent.cfg --replace $(SRCS) $(INCS)
-	
